(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~cashier-otc-p~07500aac"],{

/***/ "../../components/lib/button-toggle-menu.css":
/*!**************************************************************************************!*\
  !*** /home/mahdi/workspace/deriv-app/packages/components/lib/button-toggle-menu.css ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvYnV0dG9uLXRvZ2dsZS1tZW51LmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9tYWhkaS93b3Jrc3BhY2UvZGVyaXYtYXBwL3BhY2thZ2VzL2NvbXBvbmVudHMvbGliL2J1dHRvbi10b2dnbGUtbWVudS5jc3M/NGY0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/button-toggle-menu.css\n");

/***/ }),

/***/ "../../components/lib/button-toggle-menu.js":
/*!*************************************************************************************!*\
  !*** /home/mahdi/workspace/deriv-app/packages/components/lib/button-toggle-menu.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(g){if(t[g])return t[g].exports;var a=t[g]={i:g,l:!1,exports:{}};return e[g].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,g){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:g})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var g=Object.create(null);if(n.r(g),Object.defineProperty(g,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(g,a,function(t){return e[t]}.bind(null,a));return g},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=46)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},15:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _button_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\\n/* harmony import */ var _button_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17);\\n/* harmony import */ var _button_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_button_scss__WEBPACK_IMPORTED_MODULE_1__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\"default\"] = (_button_jsx__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"]);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9uL2luZGV4LmpzPzE1M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1dHRvbiBmcm9tICcuL2J1dHRvbi5qc3gnO1xuaW1wb3J0ICcuL2J1dHRvbi5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///15\\n')},17:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5zY3NzP2UxMDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU3NTUzNDIxMTgyMlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///17\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},26:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9uLXRvZ2dsZS1tZW51L2J1dHRvbi10b2dnbGUtbWVudS5zY3NzPzQ0ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU3NTUzNDIxMTkyOFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///26\\n\")},46:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// CONCATENATED MODULE: ./src/components/button-toggle-menu/button-highlight.jsx\\n\\n\\n\\nvar button_highlight_Highlight = function Highlight(_ref) {\\n  var left = _ref.left,\\n      width = _ref.width;\\n  var border_radius_size = \\'4px\\';\\n  var left_offset = left < 60 ? 0 : left;\\n  var width_offset = width < 60 ? 61 : width;\\n  var highlight_style = {\\n    width: width_offset,\\n    left: 0,\\n    transform: \"translate3d(\".concat(left_offset, \"px, 0, 0)\"),\\n    \\'borderTopLeftRadius\\': left_offset === 0 ? border_radius_size : 0,\\n    \\'borderTopRightRadius\\': left_offset === 0 ? 0 : border_radius_size,\\n    \\'borderBottomLeftRadius\\': left_offset === 0 ? border_radius_size : 0,\\n    \\'borderBottomRightRadius\\': left_offset === 0 ? 0 : border_radius_size\\n  };\\n  return external_react_default.a.createElement(\"span\", {\\n    style: highlight_style,\\n    className: \"button-menu--highlight\"\\n  });\\n};\\n\\nbutton_highlight_Highlight.propTypes = {\\n  left: external_prop_types_default.a.number,\\n  width: external_prop_types_default.a.number\\n};\\n\\n// CONCATENATED MODULE: ./src/components/button-toggle-menu/button-highlight-wrapper.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\\n\\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\\n\\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\\n\\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\\n\\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\nvar button_highlight_wrapper_HighlightWrapper =\\n/*#__PURE__*/\\nfunction (_React$PureComponent) {\\n  _inherits(HighlightWrapper, _React$PureComponent);\\n\\n  function HighlightWrapper() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, HighlightWrapper);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HighlightWrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n    _this.state = {\\n      left: 0,\\n      width: 0\\n    };\\n\\n    _this.onClick = function (e, buttonClick) {\\n      if (!e.target) return;\\n\\n      _this.updateHighlightPosition(e.target.closest(\\'button\\'));\\n\\n      if (typeof buttonClick === \\'function\\') {\\n        buttonClick();\\n      }\\n    };\\n\\n    _this.resetHighlight = function () {\\n      _this.setState({\\n        left: 0,\\n        width: 0\\n      });\\n    };\\n\\n    _this.updateHighlightPosition = function (el) {\\n      if (!el) return;\\n      var left = el.offsetLeft,\\n          width = el.offsetWidth;\\n\\n      if (_this.state.width !== width) {\\n        _this.setState({\\n          width: width\\n        });\\n      }\\n\\n      if (_this.state.left !== left) {\\n        _this.setState({\\n          left: left\\n        });\\n      }\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(HighlightWrapper, [{\\n    key: \"componentDidMount\",\\n    value: function componentDidMount() {\\n      var active_button_el = _toConsumableArray(this.node.getElementsByClassName(\\'button-menu__button--active\\'))[0];\\n\\n      if (!this.node) return;\\n      this.updateHighlightPosition(active_button_el);\\n    }\\n  }, {\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate() {\\n      var active_button_el = _toConsumableArray(this.node.getElementsByClassName(\\'button-menu__button--active\\'))[0];\\n\\n      if (active_button_el) {\\n        this.updateHighlightPosition(active_button_el);\\n      } else if (this.state.left !== 0 || this.state.width !== 0) {\\n        this.resetHighlight(); // clear highlight when active element doesn\\'t exist\\n      }\\n    }\\n  }, {\\n    key: \"componentWillUnMount\",\\n    value: function componentWillUnMount() {\\n      this.resetHighlight();\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _this$props = this.props,\\n          className = _this$props.className,\\n          other_props = _objectWithoutProperties(_this$props, [\"className\"]);\\n\\n      var props = _objectSpread({\\n        className: external_classnames_default()(\\'button-menu__wrapper\\', className)\\n      }, other_props);\\n\\n      return external_react_default.a.createElement(\"div\", _extends({\\n        ref: function ref(node) {\\n          return _this2.node = node;\\n        }\\n      }, props), external_react_default.a.Children.map(this.props.children, function (child) {\\n        return external_react_default.a.cloneElement(child, {\\n          onClick: function onClick(e) {\\n            return _this2.onClick(e, child.props.onClick);\\n          }\\n        });\\n      }), external_react_default.a.createElement(button_highlight_Highlight, {\\n        left: this.state.left,\\n        width: this.state.width\\n      }));\\n    }\\n  }]);\\n\\n  return HighlightWrapper;\\n}(external_react_default.a.PureComponent);\\n\\nbutton_highlight_wrapper_HighlightWrapper.propTypes = {\\n  children: external_prop_types_default.a.array,\\n  className: external_prop_types_default.a.string,\\n  timeout: external_prop_types_default.a.number\\n};\\n/* harmony default export */ var button_highlight_wrapper = (button_highlight_wrapper_HighlightWrapper);\\n// EXTERNAL MODULE: ./src/components/button/index.js\\nvar components_button = __webpack_require__(15);\\n\\n// CONCATENATED MODULE: ./src/components/button-toggle-menu/button-toggle-menu.jsx\\n\\n\\n\\n\\n\\n\\nvar button_toggle_menu_ButtonToggleMenu = function ButtonToggleMenu(_ref) {\\n  var buttons_arr = _ref.buttons_arr,\\n      className = _ref.className,\\n      id = _ref.id,\\n      is_animated = _ref.is_animated,\\n      name = _ref.name,\\n      onChange = _ref.onChange,\\n      value = _ref.value;\\n\\n  var changeValue = function changeValue(selected_value) {\\n    if (value === selected_value) return;\\n    onChange({\\n      target: {\\n        value: selected_value,\\n        name: name\\n      }\\n    });\\n  };\\n\\n  var menu = buttons_arr.map(function (val, idx) {\\n    var menuClassNames = external_classnames_default()(\\'button-menu__button\\', {\\n      \\'button-menu__button--active\\': val.value === value\\n    });\\n    return external_react_default.a.createElement(components_button[\"default\"], {\\n      id: \"dc_\".concat(val.value, \"_toggle_item\"),\\n      key: idx,\\n      text: \"\".concat(val.text.charAt(0).toUpperCase()).concat(val.text.slice(1)),\\n      onClick: function onClick() {\\n        return changeValue(val.value);\\n      },\\n      className: menuClassNames\\n    });\\n  });\\n  return external_react_default.a.createElement(\"div\", {\\n    id: id,\\n    className: external_classnames_default()(\\'button-menu\\', className)\\n  }, is_animated ? external_react_default.a.createElement(button_highlight_wrapper, null, menu) : external_react_default.a.createElement(external_react_default.a.Fragment, null, menu));\\n};\\n\\nbutton_toggle_menu_ButtonToggleMenu.propTypes = {\\n  buttons_arr: external_prop_types_default.a.array,\\n  className: external_prop_types_default.a.string,\\n  id: external_prop_types_default.a.string,\\n  is_animated: external_prop_types_default.a.bool,\\n  name: external_prop_types_default.a.string,\\n  onChange: external_prop_types_default.a.func,\\n  value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string])\\n};\\n/* harmony default export */ var button_toggle_menu = (button_toggle_menu_ButtonToggleMenu);\\n// EXTERNAL MODULE: ./src/components/button-toggle-menu/button-toggle-menu.scss\\nvar button_toggle_menu_button_toggle_menu = __webpack_require__(26);\\n\\n// CONCATENATED MODULE: ./src/components/button-toggle-menu/index.js\\n\\n\\n/* harmony default export */ var components_button_toggle_menu = __webpack_exports__[\"default\"] = (button_toggle_menu);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///46\\n')},5:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\\n\\n\\n\\n\\nvar Loading = function Loading(_ref) {\\n  var className = _ref.className,\\n      id = _ref.id,\\n      _ref$is_fullscreen = _ref.is_fullscreen,\\n      is_fullscreen = _ref$is_fullscreen === void 0 ? true : _ref$is_fullscreen,\\n      is_slow_loading = _ref.is_slow_loading,\\n      status = _ref.status,\\n      theme = _ref.theme;\\n  var theme_class = theme ? \"barspinner-\".concat(theme) : \\'barspinner-light\\';\\n  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", {\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\\'initial-loader\\', {\\n      \\'initial-loader--fullscreen\\': is_fullscreen\\n    }, className)\\n  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", {\\n    id: id,\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\\'initial-loader__barspinner\\', \\'barspinner\\', theme_class)\\n  }, Array.from(new Array(5)).map(function (x, inx) {\\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", {\\n      key: inx,\\n      className: \"initial-loader__barspinner--rect barspinner__rect barspinner__rect--\".concat(inx + 1, \" rect\").concat(inx + 1)\\n    });\\n  })), is_slow_loading && status.map(function (text, inx) {\\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"h3\", {\\n      className: \"initial-loader__text\",\\n      key: inx\\n    }, text);\\n  }));\\n};\\n\\nLoading.propTypes = {\\n  className: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string,\\n  id: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number]),\\n  is_fullscreen: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\\n  is_slow_loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\\n  status: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.array,\\n  theme: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string\\n};\\n/* harmony default export */ __webpack_exports__[\"a\"] = (Loading);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9zcmMvY29tcG9uZW50cy9sb2FkaW5nL2xvYWRpbmcuanN4PzdmOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgICAgICBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzICBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgTG9hZGluZyA9ICh7IGNsYXNzTmFtZSwgaWQsIGlzX2Z1bGxzY3JlZW4gPSB0cnVlLCBpc19zbG93X2xvYWRpbmcsIHN0YXR1cywgdGhlbWUgfSkgPT4ge1xuICAgIGNvbnN0IHRoZW1lX2NsYXNzID0gdGhlbWUgPyBgYmFyc3Bpbm5lci0ke3RoZW1lfWAgOiAnYmFyc3Bpbm5lci1saWdodCc7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2luaXRpYWwtbG9hZGVyJywge1xuICAgICAgICAgICAgJ2luaXRpYWwtbG9hZGVyLS1mdWxsc2NyZWVuJzogaXNfZnVsbHNjcmVlbixcbiAgICAgICAgfSwgY2xhc3NOYW1lKX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2luaXRpYWwtbG9hZGVyX19iYXJzcGlubmVyJywgJ2JhcnNwaW5uZXInLCB0aGVtZV9jbGFzcyl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyBBcnJheS5mcm9tKG5ldyBBcnJheSg1KSkubWFwKCh4LCBpbngpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpbnh9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bpbml0aWFsLWxvYWRlcl9fYmFyc3Bpbm5lci0tcmVjdCBiYXJzcGlubmVyX19yZWN0IGJhcnNwaW5uZXJfX3JlY3QtLSR7aW54ICsgMX0gcmVjdCR7aW54ICsgMX1gfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7IGlzX3Nsb3dfbG9hZGluZyAmJiBzdGF0dXMubWFwKCh0ZXh0LCBpbngpID0+IChcbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPSdpbml0aWFsLWxvYWRlcl9fdGV4dCcga2V5PXtpbnh9Pnt0ZXh0fTwvaDM+XG4gICAgICAgICAgICApKVxuICAgICAgICAgICAgfVxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcblxuTG9hZGluZy5wcm9wVHlwZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlkICAgICAgIDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgXSksXG4gICAgaXNfZnVsbHNjcmVlbiAgOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc19zbG93X2xvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0YXR1cyAgICAgICAgIDogUHJvcFR5cGVzLmFycmF5LFxuICAgIHRoZW1lICAgICAgICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5leHBvcnQgZGVmYXVsdCBMb2FkaW5nO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQUE7QUFLQTtBQUNBO0FBRkE7QUFJQTtBQUVBO0FBQ0E7QUFGQTtBQURBO0FBT0E7QUFDQTtBQUFBO0FBQUE7QUFEQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///5\\n')},7:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: ./src/components/loading/loading.jsx\\nvar loading = __webpack_require__(5);\\n\\n// EXTERNAL MODULE: ./src/components/loading/loading.scss\\nvar loading_loading = __webpack_require__(9);\\n\\n// CONCATENATED MODULE: ./src/components/button/button_loading.jsx\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\n\\n\\n\\n\\nvar button_loading_ButtonLoading = function ButtonLoading(props) {\\n  return external_react_default.a.createElement(loading[\"a\" /* default */], _extends({}, props, {\\n    is_fullscreen: false,\\n    className: \"initial-loader--btn\"\\n  }));\\n};\\n\\n/* harmony default export */ var button_loading = (button_loading_ButtonLoading);\\n// CONCATENATED MODULE: ./src/components/button/button.jsx\\n\\n\\n\\n // TODO: use-from-shared - Use this icon from icons\\' shared package\\n\\nvar button_IconCheckmark = function IconCheckmark() {\\n  return external_react_default.a.createElement(\"svg\", {\\n    xmlns: \"http://www.w3.org/2000/svg\",\\n    width: \"24\",\\n    height: \"24\",\\n    viewBox: \"0 0 24 24\"\\n  }, external_react_default.a.createElement(\"g\", {\\n    fill: \"none\",\\n    fillRule: \"evenodd\"\\n  }, external_react_default.a.createElement(\"path\", {\\n    d: \"M0 0h24v24H0z\"\\n  }), external_react_default.a.createElement(\"path\", {\\n    fill: \"#FFF\",\\n    fillRule: \"nonzero\",\\n    d: \"M9 16.2l-3.5-3.5a.984.984 0 0 0-1.4 0 .984.984 0 0 0 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7a.984.984 0 0 0 0-1.4.984.984 0 0 0-1.4 0L9 16.2z\"\\n  })));\\n};\\n\\nvar button_Button = function Button(_ref) {\\n  var children = _ref.children,\\n      _ref$className = _ref.className,\\n      className = _ref$className === void 0 ? \\'\\' : _ref$className,\\n      classNameSpan = _ref.classNameSpan,\\n      green = _ref.green,\\n      has_effect = _ref.has_effect,\\n      icon = _ref.icon,\\n      id = _ref.id,\\n      is_disabled = _ref.is_disabled,\\n      is_loading = _ref.is_loading,\\n      is_submit_success = _ref.is_submit_success,\\n      large = _ref.large,\\n      medium = _ref.medium,\\n      onClick = _ref.onClick,\\n      tabIndex = _ref.tabIndex,\\n      text = _ref.text,\\n      wrapperClassName = _ref.wrapperClassName,\\n      type = _ref.type,\\n      primary = _ref.primary,\\n      secondary = _ref.secondary,\\n      small = _ref.small,\\n      tertiary = _ref.tertiary;\\n  var classes = external_classnames_default()(\\'btn\\', {\\n    \\'btn__effect\\': has_effect,\\n    \\'btn--primary\\': primary,\\n    \\'btn--secondary\\': secondary,\\n    \\'btn--tertiary\\': tertiary,\\n    \\'btn--green\\': green,\\n    \\'btn__large\\': large,\\n    \\'btn__medium\\': medium,\\n    \\'btn__small\\': small\\n  }, className);\\n  var button = external_react_default.a.createElement(\"button\", {\\n    id: id,\\n    className: classes,\\n    onClick: onClick || undefined,\\n    disabled: is_disabled,\\n    tabIndex: tabIndex || \\'0\\',\\n    type: is_submit_success ? \\'button\\' : type || \\'submit\\'\\n  }, icon && external_react_default.a.createElement(\"div\", {\\n    className: \"btn__icon\"\\n  }, icon), text && !(is_loading || is_submit_success) && external_react_default.a.createElement(\"span\", {\\n    className: external_classnames_default()(\\'btn__text\\', classNameSpan)\\n  }, text[0].toUpperCase() + text.substr(1)), is_loading && external_react_default.a.createElement(button_loading, null), is_submit_success && external_react_default.a.createElement(button_IconCheckmark, null), external_react_default.a.createElement(\"span\", {\\n    className: external_classnames_default()(\\'btn__text\\', classNameSpan)\\n  }, !text && children));\\n  var wrapper = external_react_default.a.createElement(\"div\", {\\n    className: wrapperClassName\\n  }, button);\\n  return wrapperClassName ? wrapper : button;\\n};\\n\\nbutton_Button.propTypes = {\\n  children: external_prop_types_default.a.node,\\n  className: external_prop_types_default.a.string,\\n  classNameSpan: external_prop_types_default.a.string,\\n  green: external_prop_types_default.a.bool,\\n  has_effect: external_prop_types_default.a.bool,\\n  icon: external_prop_types_default.a.node,\\n  id: external_prop_types_default.a.string,\\n  is_disabled: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.bool]),\\n  is_loading: external_prop_types_default.a.oneOfType([external_prop_types_default.a.object, external_prop_types_default.a.bool]),\\n  is_submit_success: external_prop_types_default.a.bool,\\n  large: external_prop_types_default.a.bool,\\n  medium: external_prop_types_default.a.bool,\\n  onClick: external_prop_types_default.a.func,\\n  primary: external_prop_types_default.a.bool,\\n  secondary: external_prop_types_default.a.bool,\\n  small: external_prop_types_default.a.bool,\\n  tertiary: external_prop_types_default.a.bool,\\n  text: external_prop_types_default.a.string,\\n  wrapperClassName: external_prop_types_default.a.string\\n};\\n/* harmony default export */ var button_button = __webpack_exports__[\"a\"] = (button_Button);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9zcmMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uX2xvYWRpbmcuanN4PzgzNDEiLCJ3ZWJwYWNrOi8vZGVyaXYtY29tcG9uZW50LltuYW1lXS8uL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24uanN4PzY5MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ICAgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvYWRpbmcgZnJvbSAnLi4vbG9hZGluZy9sb2FkaW5nLmpzeCc7XG5pbXBvcnQgJy4uL2xvYWRpbmcvbG9hZGluZy5zY3NzJztcblxuY29uc3QgQnV0dG9uTG9hZGluZyA9IChwcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMb2FkaW5nXG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICBpc19mdWxsc2NyZWVuPXtmYWxzZX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT0naW5pdGlhbC1sb2FkZXItLWJ0bidcbiAgICAgICAgLz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uTG9hZGluZztcbiIsImltcG9ydCBjbGFzc05hbWVzICAgIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyAgICAgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgICAgICAgICBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQnV0dG9uTG9hZGluZyBmcm9tICcuL2J1dHRvbl9sb2FkaW5nLmpzeCc7XG5cbi8vIFRPRE86IHVzZS1mcm9tLXNoYXJlZCAtIFVzZSB0aGlzIGljb24gZnJvbSBpY29ucycgc2hhcmVkIHBhY2thZ2VcbmNvbnN0IEljb25DaGVja21hcmsgPSAoKSA9PiAoXG4gICAgPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScyNCcgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0Jz5cbiAgICAgICAgPGcgZmlsbD0nbm9uZScgZmlsbFJ1bGU9J2V2ZW5vZGQnPlxuICAgICAgICAgICAgPHBhdGggZD0nTTAgMGgyNHYyNEgweicgLz5cbiAgICAgICAgICAgIDxwYXRoIGZpbGw9JyNGRkYnIGZpbGxSdWxlPSdub256ZXJvJyBkPSdNOSAxNi4ybC0zLjUtMy41YS45ODQuOTg0IDAgMCAwLTEuNCAwIC45ODQuOTg0IDAgMCAwIDAgMS40bDQuMTkgNC4xOWMuMzkuMzkgMS4wMi4zOSAxLjQxIDBMMjAuMyA3LjdhLjk4NC45ODQgMCAwIDAgMC0xLjQuOTg0Ljk4NCAwIDAgMC0xLjQgMEw5IDE2LjJ6JyAvPlxuICAgICAgICA8L2c+XG4gICAgPC9zdmc+XG4pO1xuXG5jb25zdCBCdXR0b24gPSAoe1xuICAgIGNoaWxkcmVuLFxuICAgIGNsYXNzTmFtZSA9ICcnLFxuICAgIGNsYXNzTmFtZVNwYW4sXG4gICAgZ3JlZW4sXG4gICAgaGFzX2VmZmVjdCxcbiAgICBpY29uLFxuICAgIGlkLFxuICAgIGlzX2Rpc2FibGVkLFxuICAgIGlzX2xvYWRpbmcsXG4gICAgaXNfc3VibWl0X3N1Y2Nlc3MsXG4gICAgbGFyZ2UsXG4gICAgbWVkaXVtLFxuICAgIG9uQ2xpY2ssXG4gICAgdGFiSW5kZXgsXG4gICAgdGV4dCxcbiAgICB3cmFwcGVyQ2xhc3NOYW1lLFxuICAgIHR5cGUsXG4gICAgcHJpbWFyeSxcbiAgICBzZWNvbmRhcnksXG4gICAgc21hbGwsXG4gICAgdGVydGlhcnksXG59KSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoJ2J0bicsIHtcbiAgICAgICAgJ2J0bl9fZWZmZWN0JyAgIDogaGFzX2VmZmVjdCxcbiAgICAgICAgJ2J0bi0tcHJpbWFyeScgIDogcHJpbWFyeSxcbiAgICAgICAgJ2J0bi0tc2Vjb25kYXJ5Jzogc2Vjb25kYXJ5LFxuICAgICAgICAnYnRuLS10ZXJ0aWFyeScgOiB0ZXJ0aWFyeSxcbiAgICAgICAgJ2J0bi0tZ3JlZW4nICAgIDogZ3JlZW4sXG4gICAgICAgICdidG5fX2xhcmdlJyAgICA6IGxhcmdlLFxuICAgICAgICAnYnRuX19tZWRpdW0nICAgOiBtZWRpdW0sXG4gICAgICAgICdidG5fX3NtYWxsJyAgICA6IHNtYWxsLFxuICAgIH0sIGNsYXNzTmFtZSk7XG4gICAgY29uc3QgYnV0dG9uID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXN9XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrIHx8IHVuZGVmaW5lZH1cbiAgICAgICAgICAgIGRpc2FibGVkPXtpc19kaXNhYmxlZH1cbiAgICAgICAgICAgIHRhYkluZGV4PXt0YWJJbmRleCB8fCAnMCd9XG4gICAgICAgICAgICB0eXBlPXtpc19zdWJtaXRfc3VjY2VzcyA/ICdidXR0b24nIDogKHR5cGUgfHwgJ3N1Ym1pdCcpfVxuICAgICAgICA+XG4gICAgICAgICAgICB7aWNvbiAmJlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdidG5fX2ljb24nPlxuICAgICAgICAgICAgICAgICAgICB7aWNvbn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHt0ZXh0ICYmICEoaXNfbG9hZGluZyB8fCBpc19zdWJtaXRfc3VjY2VzcykgJiZcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2J0bl9fdGV4dCcsIGNsYXNzTmFtZVNwYW4pfT5cbiAgICAgICAgICAgICAgICAgICAgeyB0ZXh0WzBdLnRvVXBwZXJDYXNlKCkgKyB0ZXh0LnN1YnN0cigxKSB9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge2lzX2xvYWRpbmcgJiZcbiAgICAgICAgICAgICAgICA8QnV0dG9uTG9hZGluZyAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge2lzX3N1Ym1pdF9zdWNjZXNzICYmXG4gICAgICAgICAgICAgICAgPEljb25DaGVja21hcmsgLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnYnRuX190ZXh0JywgY2xhc3NOYW1lU3Bhbil9PlxuICAgICAgICAgICAgICAgIHshdGV4dCAmJiBjaGlsZHJlbn1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgKTtcbiAgICBjb25zdCB3cmFwcGVyID0gKDxkaXYgY2xhc3NOYW1lPXt3cmFwcGVyQ2xhc3NOYW1lfT57YnV0dG9ufTwvZGl2Pik7XG5cbiAgICByZXR1cm4gd3JhcHBlckNsYXNzTmFtZSA/IHdyYXBwZXIgOiBidXR0b247XG59O1xuXG5CdXR0b24ucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuICAgICAgICAgOiBQcm9wVHlwZXMubm9kZSxcbiAgICBjbGFzc05hbWUgICAgICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjbGFzc05hbWVTcGFuICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBncmVlbiAgICAgICAgICAgIDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaGFzX2VmZmVjdCAgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIGljb24gICAgICAgICAgICAgOiBQcm9wVHlwZXMubm9kZSxcbiAgICBpZCAgICAgICAgICAgICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBpc19kaXNhYmxlZCAgICAgIDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLmJvb2xdKSxcbiAgICBpc19sb2FkaW5nICAgICAgIDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSxcbiAgICBpc19zdWJtaXRfc3VjY2VzczogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGFyZ2UgICAgICAgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIG1lZGl1bSAgICAgICAgICAgOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvbkNsaWNrICAgICAgICAgIDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcHJpbWFyeSAgICAgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIHNlY29uZGFyeSAgICAgICAgOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzbWFsbCAgICAgICAgICAgIDogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGVydGlhcnkgICAgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIHRleHQgICAgICAgICAgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHdyYXBwZXJDbGFzc05hbWUgOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBOztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUpBO0FBQ0E7QUFRQTtBQXNCQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBVUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVNBO0FBQUE7QUFLQTtBQUFBO0FBVUE7QUFBQTtBQUtBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuQkE7QUFzQkEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///7\\n')},9:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9zcmMvY29tcG9uZW50cy9sb2FkaW5nL2xvYWRpbmcuc2Nzcz9kOWJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1NzU1MzQyMTIyNDJcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///9\\n\")}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/button-toggle-menu.js\n");

/***/ }),

/***/ "../../components/lib/tabs.css":
/*!************************************************************************!*\
  !*** /home/mahdi/workspace/deriv-app/packages/components/lib/tabs.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvdGFicy5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbWFoZGkvd29ya3NwYWNlL2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi90YWJzLmNzcz81YjFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/tabs.css\n");

/***/ }),

/***/ "../../components/lib/tabs.js":
/*!***********************************************************************!*\
  !*** /home/mahdi/workspace/deriv-app/packages/components/lib/tabs.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=48)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},40:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy90YWJzLnNjc3M/ZDJmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTc1NTM0MjEyNDEyXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWhvdC1sb2FkZXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJmaWxlTWFwXCI6XCJ7ZmlsZU5hbWV9XCJ9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpOztcbiAgICB9XG4gICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FLQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///40\\n\")},48:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/tab.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\nvar tab_Tab =\\n/*#__PURE__*/\\nfunction (_Component) {\\n  _inherits(Tab, _Component);\\n\\n  function Tab() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, Tab);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n\\n    _this.onClick = function () {\\n      var onClick = _this.props.onClick;\\n      onClick();\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Tab, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          is_active = _this$props.is_active,\\n          label = _this$props.label;\\n      return external_react_default.a.createElement(\"li\", {\\n        className: external_classnames_default()(\\'dc-tabs__item\\', {\\n          \\'dc-tabs__active\\': is_active\\n        }),\\n        onClick: this.onClick\\n      }, label);\\n    }\\n  }]);\\n\\n  return Tab;\\n}(external_react_[\"Component\"]);\\n\\ntab_Tab.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  is_active: external_prop_types_default.a.bool,\\n  label: external_prop_types_default.a.string,\\n  onClick: external_prop_types_default.a.func\\n};\\n/* harmony default export */ var tab = (tab_Tab);\\n// CONCATENATED MODULE: ./src/components/tabs/tabs.jsx\\nfunction tabs_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { tabs_typeof = function _typeof(obj) { return typeof obj; }; } else { tabs_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return tabs_typeof(obj); }\\n\\nfunction tabs_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction tabs_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction tabs_createClass(Constructor, protoProps, staticProps) { if (protoProps) tabs_defineProperties(Constructor.prototype, protoProps); if (staticProps) tabs_defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction tabs_possibleConstructorReturn(self, call) { if (call && (tabs_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return tabs_assertThisInitialized(self); }\\n\\nfunction tabs_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction tabs_getPrototypeOf(o) { tabs_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return tabs_getPrototypeOf(o); }\\n\\nfunction tabs_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) tabs_setPrototypeOf(subClass, superClass); }\\n\\nfunction tabs_setPrototypeOf(o, p) { tabs_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return tabs_setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\nvar tabs_Tabs =\\n/*#__PURE__*/\\nfunction (_Component) {\\n  tabs_inherits(Tabs, _Component);\\n\\n  function Tabs(props) {\\n    var _this;\\n\\n    tabs_classCallCheck(this, Tabs);\\n\\n    _this = tabs_possibleConstructorReturn(this, tabs_getPrototypeOf(Tabs).call(this, props));\\n\\n    _this.onClickTabItem = function (index) {\\n      _this.setState({\\n        active_index: index\\n      });\\n\\n      if (typeof _this.props.onClickTabItem === \\'function\\') {\\n        _this.props.onClickTabItem(index);\\n      }\\n    };\\n\\n    _this.state = {\\n      active_index: props.active_index || 0\\n    };\\n    return _this;\\n  }\\n\\n  tabs_createClass(Tabs, [{\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate(prev_props, prev_state) {\\n      if (this.props.active_index && prev_state.active_index !== this.props.active_index) {\\n        this.setState({\\n          active_index: this.props.active_index || 0\\n        });\\n      }\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var children = this.props.children;\\n      var active_index = this.state.active_index;\\n      var tab_width = (100 / children.length).toFixed(2);\\n      return external_react_default.a.createElement(\"div\", {\\n        className: \"dc-tabs\",\\n        style: {\\n          \\'--tab-width\\': \"\".concat(tab_width, \"%\")\\n        }\\n      }, external_react_default.a.createElement(\"ul\", {\\n        className: \"dc-tabs__list\"\\n      }, children.map(function (child, index) {\\n        var label = child.props.label;\\n        return external_react_default.a.createElement(tab, {\\n          is_active: index === active_index,\\n          key: label,\\n          label: label,\\n          onClick: function onClick() {\\n            return _this2.onClickTabItem(index);\\n          }\\n        });\\n      }), external_react_default.a.createElement(\"span\", {\\n        className: \"dc-tabs__active-line\"\\n      })), external_react_default.a.createElement(\"div\", {\\n        className: \"dc-tabs__content\"\\n      }, children.map(function (child, index) {\\n        if (index !== active_index) {\\n          return undefined;\\n        }\\n\\n        return child.props.children;\\n      })));\\n    }\\n  }]);\\n\\n  return Tabs;\\n}(external_react_[\"Component\"]);\\n\\ntabs_Tabs.propTypes = {\\n  children: external_prop_types_default.a.instanceOf(Array)\\n};\\n/* harmony default export */ var tabs = (tabs_Tabs);\\n// EXTERNAL MODULE: ./src/components/tabs/tabs.scss\\nvar tabs_tabs = __webpack_require__(40);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/index.js\\n\\n\\n/* harmony default export */ var components_tabs = __webpack_exports__[\"default\"] = (tabs);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy90YWIuanN4PzFkOGUiLCJ3ZWJwYWNrOi8vZGVyaXYtY29tcG9uZW50LltuYW1lXS8uL3NyYy9jb21wb25lbnRzL3RhYnMvdGFicy5qc3g/MTQxMyIsIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy9pbmRleC5qcz9lOTFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzICAgICAgICAgICBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzICAgICAgICAgICAgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNsYXNzIFRhYiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgb25DbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBvbkNsaWNrIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBvbkNsaWNrKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBpc19hY3RpdmUsXG4gICAgICAgICAgICBsYWJlbCxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtdGFic19faXRlbScsXG4gICAgICAgICAgICAgICAgICAgIHsgJ2RjLXRhYnNfX2FjdGl2ZSc6IGlzX2FjdGl2ZSB9XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblRhYi5wcm9wVHlwZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlzX2FjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGFiZWwgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9uQ2xpY2sgIDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBUYWI7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyAgICAgICAgICAgIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFRhYiAgICAgICAgICAgICAgICAgIGZyb20gJy4vdGFiLmpzeCc7XG5cbmNsYXNzIFRhYnMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0geyBhY3RpdmVfaW5kZXg6IHByb3BzLmFjdGl2ZV9pbmRleCB8fCAwIH07XG4gICAgfVxuXG4gICAgb25DbGlja1RhYkl0ZW0gPSBpbmRleCA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVfaW5kZXg6IGluZGV4IH0pO1xuXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5wcm9wcy5vbkNsaWNrVGFiSXRlbSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrVGFiSXRlbShpbmRleCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZfcHJvcHMsIHByZXZfc3RhdGUpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuYWN0aXZlX2luZGV4ICYmIHByZXZfc3RhdGUuYWN0aXZlX2luZGV4ICE9PSB0aGlzLnByb3BzLmFjdGl2ZV9pbmRleCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGFjdGl2ZV9pbmRleDogdGhpcy5wcm9wcy5hY3RpdmVfaW5kZXggfHwgMCB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiB9ICAgICA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgYWN0aXZlX2luZGV4IH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB0YWJfd2lkdGggICAgICAgID0gKDEwMCAvIGNoaWxkcmVuLmxlbmd0aCkudG9GaXhlZCgyKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RjLXRhYnMnIHN0eWxlPXt7ICctLXRhYi13aWR0aCc6IGAke3RhYl93aWR0aH0lYCB9fT5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPSdkYy10YWJzX19saXN0Jz5cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuLm1hcCgoY2hpbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGxhYmVsIH0gPSBjaGlsZC5wcm9wcztcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGFiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZT17aW5kZXggPT09IGFjdGl2ZV9pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtsYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLm9uQ2xpY2tUYWJJdGVtKGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nZGMtdGFic19fYWN0aXZlLWxpbmUnIC8+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGMtdGFic19fY29udGVudCc+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbi5tYXAoKGNoaWxkLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSBhY3RpdmVfaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuVGFicy5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5pbnN0YW5jZU9mKEFycmF5KSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRhYnM7XG4iLCJpbXBvcnQgVGFicyBmcm9tICcuL3RhYnMuanN4JztcbmltcG9ydCAnLi90YWJzLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBUYWJzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBOzs7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQU1BO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFKQTtBQVNBOzs7O0FBdEJBO0FBQ0E7QUF3QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBQ0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFGQTtBQU9BO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBQUE7QUFBQTtBQUhBO0FBSUE7QUFDQTs7O0FBU0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7OztBQUVBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBSkE7QUFPQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBSUE7Ozs7QUFyREE7QUFDQTtBQXVEQTtBQUNBO0FBREE7QUFJQTs7Ozs7QUNoRUE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///48\\n')}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/tabs.js\n");

/***/ })

}]);